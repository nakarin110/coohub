local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "Coo hub V1.1",
   LoadingTitle = "Coo OT",
   LoadingSubtitle = "สร้างโดย COOHUB",
   ConfigurationSaving = {
      Enabled = false,
      FolderName = nil,
      FileName = "W"
   },
   KeySystem = true,
   KeySettings = {
      Title = "Coo Hub - กรุณาใส่คีย์",
      Subtitle = "คีย์จำเป็นต้องใส่ทุกครั้งที่เข้าเกม",
      Note = "กรุณาติดต่อผู้สร้างเพื่อขอคีย์",
      FileName = "hub",
      SaveKey = false,
      GrabKeyFromSite = false,
      Key = {
        "coo100-X4R2", "coo101-P9K5", "coo102-M3J7", "coo103-L8H4", "coo104-W2D9",
        "coo105-Q7V3", "coo106-B5N8", "coo107-Y6C4", "coo108-K9M2", "coo109-T4H7",
        "coo110-F8L3", "coo111-Z5X9", "coo112-R2W6", "coo113-J7D4", "coo114-N3B8",
        "coo115-C6V2", "coo116-H9T5", "coo117-M4G7", "coo118-P8K3", "coo119-L2X6",
        "coo120-W7R4", "coo121-Y3H8", "coo122-B9N5", "coo123-Q4V7", "coo124-T2M6",
        "coo125-F7K3", "coo126-Z5L9", "coo127-C8W4", "coo128-J2H6", "coo129-P9R5",
        "coo130-M4B7", "coo131-X8N3", "coo132-L2V6", "coo133-Q7T4", "coo134-Y3K8",
        "coo135-W9H5", "coo136-B4G7", "coo137-F2M6", "coo138-Z7R3", "coo139-C5L9",
        "coo140-J8W4", "coo141-P2H6", "coo142-T9N5", "coo143-M4V7", "coo144-X8K3",
        "coo145-L2B6", "coo146-Q7R4", "coo147-Y3T8", "coo148-W9G5", "coo149-F4H7",
        "coo150-Z2M6", "coo151-C7L3", "coo152-J5N9", "coo153-P8W4", "coo154-B2V6",
        "coo155-T9K5", "coo156-M4R7", "coo157-X8H3", "coo158-L2G6", "coo159-Q7B4",
        "coo160-Y3N8", "coo161-W9T5", "coo162-F4V7", "coo163-Z2K6", "coo164-C7M3",
        "coo165-J5H9", "coo166-P8L4", "coo167-B2R6", "coo168-T9W5", "coo169-M4G7",
        "coo170-X8N3", "coo171-L2V6", "coo172-Q7K4", "coo173-Y3H8", "coo174-W9B5",
        "coo175-F4T7", "coo176-Z2M6", "coo177-C7R3", "coo178-J5L9", "coo179-P8W4",
        "coo180-B2V6", "coo181-T9K5", "coo182-M4H7", "coo183-X8G3", "coo184-L2N6",
        "coo185-Q7R4", "coo186-Y3T8", "coo187-W9B5", "coo188-F4V7", "coo189-Z2K6",
        "coo190-C7M3", "coo191-J5H9", "coo192-P8L4", "coo193-B2W6", "coo194-T9G5",
        "coo195-M4R7", "coo196-X8N3", "coo197-L2V6", "coo198-Q7K4", "coo199-Y3H8",
        "coo200-W9B5"
    }
   }
})

local MainTab = Window:CreateTab("หน้าหลัก", nil)
local MainSection = MainTab:CreateSection("เมนูหลัก")


local AimbotTab = Window:CreateTab("Aimbot", nil)
local AimbotSection = AimbotTab:CreateSection("ระบบเล็งอัตโนมัติ")

local PartyTab = Window:CreateTab("ปาร์ตี้", nil)
local PartySection = PartyTab:CreateSection("ระบบปาร์ตี้")

local SpeedEnabled = false
local SpeedValue = 16
local VerticalSpeed = 0
local IsFlying = false
local IsFrozen = false
local FrozenPosition = nil
local ESPEnabled = false
local ESPObjects = {}

local HideMyName = false

local AimbotEnabled = false
local AimbotActive = false
local FOVRadius = 100
local FOVColorR, FOVColorG, FOVColorB = 255, 255, 255
local TargetPart = "Head" 
local ShowFOVCircle = true 
local ShowCenterDot = true 

local PartyEnabled = false
local PartyMembers = {}
local CurrentPartyInput = ""
local RemovePartyInput = ""

local AimbotSmoothing = 1 
local AimbotSensitivity = 1 
local ShowTargetInfo = false
local TargetInfoText = Drawing.new("Text")
TargetInfoText.Visible = false
TargetInfoText.Size = 18
TargetInfoText.Color = Color3.fromRGB(255, 255, 255)
TargetInfoText.Transparency = 1
TargetInfoText.ZIndex = 1001
TargetInfoText.Center = true
TargetInfoText.Font = 3 

local IsMobile = false
local AimbotButtonEnabled = false
local AimbotMobileActive = false
local AimbotButton = nil
local AutoAimEnabled = false

local function checkMobile()
    return game:GetService("UserInputService").TouchEnabled and not game:GetService("UserInputService").KeyboardEnabled
end

local aimbotKeyDown = false
local selectedAimbotKey = Enum.KeyCode.LeftShift 
local aimbotKeyName = "LeftShift" 
local isWaitingForKeybindInput = false

local FOVCircle = Drawing.new("Circle")
FOVCircle.Thickness = 2
FOVCircle.NumSides = 60
FOVCircle.Radius = FOVRadius
FOVCircle.Filled = false
FOVCircle.Visible = false
FOVCircle.ZIndex = 999
FOVCircle.Transparency = 1
FOVCircle.Color = Color3.fromRGB(FOVColorR, FOVColorG, FOVColorB)

local CenterDot = Drawing.new("Circle")
CenterDot.Thickness = 1
CenterDot.NumSides = 30
CenterDot.Radius = 2
CenterDot.Filled = true
CenterDot.Visible = false
CenterDot.ZIndex = 1000
CenterDot.Transparency = 1
CenterDot.Color = Color3.fromRGB(255, 0, 0)

local function updateSpeed()
    if SpeedEnabled and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        local humanoid = game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
        local rootPart = game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
        
        if humanoid and rootPart then
            if IsFrozen and FrozenPosition then
                rootPart.CFrame = FrozenPosition
                return
            end

            if not IsFrozen then
                if humanoid.MoveDirection.Magnitude > 0 then
                    local moveDirection = humanoid.MoveDirection * SpeedValue
                    rootPart.CFrame = rootPart.CFrame + moveDirection * game:GetService("RunService").Heartbeat:Wait()
                end
                
                if IsFlying then
                    rootPart.CFrame = rootPart.CFrame + Vector3.new(0, VerticalSpeed, 0) * game:GetService("RunService").Heartbeat:Wait()
                end
            end
        end
    end
end

local function toggleMyNameVisibility()
    local localPlayer = game.Players.LocalPlayer
    if localPlayer and localPlayer.Character then
        local humanoid = localPlayer.Character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            humanoid.DisplayName = HideMyName and "" or localPlayer.Name
            humanoid.DisplayDistanceType = HideMyName and Enum.HumanoidDisplayDistanceType.None or Enum.HumanoidDisplayDistanceType.Viewer
            
            local head = localPlayer.Character:FindFirstChild("Head")
            if head then
                for _, gui in pairs(head:GetChildren()) do
                    if gui:IsA("BillboardGui") or gui:IsA("SurfaceGui") then
                        gui.Enabled = not HideMyName
                    end
                end
            end
            
            for _, gui in pairs(localPlayer.Character:GetDescendants()) do
                if (gui:IsA("BillboardGui") or gui:IsA("SurfaceGui")) and
                   (gui.Name:match("PlayerName") or gui.Name:match("NameTag") or gui.Name:match("Display") or gui.Name:match("Head")) then
                    gui.Enabled = not HideMyName
                end
                
                if gui:IsA("TextLabel") or gui:IsA("TextButton") then
                    if gui.Text == localPlayer.Name or gui.Text == localPlayer.DisplayName then
                        gui.Visible = not HideMyName
                    end
                end
            end
        end
    end
end

local function getClosestPlayerInFOV()
    local closestPlayer = nil
    local shortestDistance = FOVRadius
    
    local localPlayer = game.Players.LocalPlayer
    local camera = game.Workspace.CurrentCamera
    local centerScreen = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 2)
    
    FOVCircle.Position = centerScreen
    CenterDot.Position = centerScreen
    
    for _, player in pairs(game.Players:GetPlayers()) do
        if player ~= localPlayer and 
           player.Character and 
           player.Character:FindFirstChild(TargetPart) and 
           player.Character:FindFirstChild("Humanoid") and 
           player.Character.Humanoid.Health > 0 then
            

            local isPartyMember = false
            if PartyEnabled then
                for _, memberName in pairs(PartyMembers) do
                    if player.Name:lower() == memberName:lower() then
                        isPartyMember = true
                        break
                    end
                end
            end
            

            if not isPartyMember then
                local targetPart = player.Character[TargetPart]
                local screenPoint = camera:WorldToScreenPoint(targetPart.Position)
                
                if screenPoint.Z > 0 then
                    local vectorDistance = (centerScreen - Vector2.new(screenPoint.X, screenPoint.Y)).Magnitude
                    
                    if vectorDistance < shortestDistance then
                        closestPlayer = player
                        shortestDistance = vectorDistance
                    end
                end
            end
        end
    end
    
    return closestPlayer
end

local UserInputService = game:GetService("UserInputService")

UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if SpeedEnabled and not gameProcessed then
        if input.KeyCode == Enum.KeyCode.Space then
            if not IsFrozen then
                VerticalSpeed = SpeedValue
                IsFlying = true
            end
        elseif input.KeyCode == Enum.KeyCode.LeftControl then
            if not IsFrozen then
                VerticalSpeed = -SpeedValue
                IsFlying = true
            end
        elseif input.KeyCode == Enum.KeyCode.T then
            IsFrozen = not IsFrozen
            
            if game.Players.LocalPlayer.Character then
                local rootPart = game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
                local humanoid = game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
                
                if rootPart and humanoid then
                    if IsFrozen then
                        FrozenPosition = rootPart.CFrame
                        humanoid.WalkSpeed = 0
                        VerticalSpeed = 0
                        IsFlying = false
                    else
                        FrozenPosition = nil
                        humanoid.WalkSpeed = SpeedValue
                    end
                end
            end
        end
    end
    

    if (input.KeyCode == selectedAimbotKey) or 
       (selectedAimbotKey == Enum.UserInputType.MouseButton1 and input.UserInputType == Enum.UserInputType.MouseButton1) or
       (selectedAimbotKey == Enum.UserInputType.MouseButton2 and input.UserInputType == Enum.UserInputType.MouseButton2) then
        if not isWaitingForKeybindInput then
            aimbotKeyDown = true
        end
    end
end)

UserInputService.InputEnded:Connect(function(input, gameProcessed)
    if input.KeyCode == Enum.KeyCode.Space or input.KeyCode == Enum.KeyCode.LeftControl then
        VerticalSpeed = 0
        IsFlying = false
    end
    

    if (input.KeyCode == selectedAimbotKey) or 
       (selectedAimbotKey == Enum.UserInputType.MouseButton1 and input.UserInputType == Enum.UserInputType.MouseButton1) or
       (selectedAimbotKey == Enum.UserInputType.MouseButton2 and input.UserInputType == Enum.UserInputType.MouseButton2) then
        aimbotKeyDown = false
    end
end)

local function createESP(player)
    if player == game.Players.LocalPlayer then return end
    
    if ESPObjects[player] then removeESP(player) end
    
    local espFolder = Instance.new("Folder")
    espFolder.Name = "ESPObjects"
    
    local box = Drawing.new("Square")
    box.Visible = false
    box.Color = Color3.fromRGB(255, 0, 0)
    box.Thickness = 1
    box.Transparency = 1
    box.Filled = false
    
    local nameLabel = Drawing.new("Text")
    nameLabel.Visible = false
    nameLabel.Color = Color3.fromRGB(255, 255, 255)
    nameLabel.Size = 16
    nameLabel.Center = true
    nameLabel.Outline = true
    nameLabel.OutlineColor = Color3.fromRGB(0, 0, 0)
    nameLabel.Font = 3
    
    local healthBarBg = Drawing.new("Square")
    healthBarBg.Visible = false
    healthBarBg.Color = Color3.fromRGB(0, 0, 0)
    healthBarBg.Thickness = 1
    healthBarBg.Transparency = 0.5
    healthBarBg.Filled = true
    
    local healthBar = Drawing.new("Square")
    healthBar.Visible = false
    healthBar.Color = Color3.fromRGB(0, 255, 0)
    healthBar.Thickness = 1
    healthBar.Transparency = 1
    healthBar.Filled = true
    
    local toolLabel = Drawing.new("Text")
    toolLabel.Visible = false
    toolLabel.Color = Color3.fromRGB(255, 255, 0)
    toolLabel.Size = 14
    toolLabel.Center = false
    toolLabel.Outline = true
    toolLabel.OutlineColor = Color3.fromRGB(0, 0, 0)
    toolLabel.Font = 3
    
    ESPObjects[player] = {
        box = box,
        nameLabel = nameLabel,
        healthBarBg = healthBarBg,
        healthBar = healthBar,
        toolLabel = toolLabel,
        player = player
    }
end

local function removeESP(player)
    if ESPObjects[player] then
        if ESPObjects[player].box then
            ESPObjects[player].box:Remove()
        end
        if ESPObjects[player].nameLabel then
            ESPObjects[player].nameLabel:Remove()
        end
        if ESPObjects[player].healthBarBg then
            ESPObjects[player].healthBarBg:Remove()
        end
        if ESPObjects[player].healthBar then
            ESPObjects[player].healthBar:Remove()
        end
        if ESPObjects[player].toolLabel then
            ESPObjects[player].toolLabel:Remove()
        end
        ESPObjects[player] = nil
    end
end

local function updateESP()
    if not ESPEnabled then return end
    
   
    for player, _ in pairs(ESPObjects) do
        if typeof(player) ~= "string" and (not player.Parent or not player:IsDescendantOf(game)) then
            removeESP(player)
        end
    end
    
    local camera = game:GetService("Workspace").CurrentCamera
    
    for player, espData in pairs(ESPObjects) do
        if typeof(player) ~= "string" and player.Character and player.Character:FindFirstChild("HumanoidRootPart") and player.Character:FindFirstChild("Humanoid") then
            local humanoid = player.Character:FindFirstChild("Humanoid")
            local hrp = player.Character:FindFirstChild("HumanoidRootPart")
            
            local vector, onScreen = camera:WorldToViewportPoint(hrp.Position)
            
            if onScreen then
                local headPos
                local rootPos = hrp.Position
                
                if player.Character:FindFirstChild("Head") then
                    headPos = player.Character:FindFirstChild("Head").Position
                else
                    headPos = rootPos + Vector3.new(0, 3, 0)
                end
                
                local rootPosOnScreen = camera:WorldToViewportPoint(rootPos)
                local headPosOnScreen = camera:WorldToViewportPoint(headPos)
                
                local boxSize = Vector2.new(
                    math.max(math.abs(headPosOnScreen.X - rootPosOnScreen.X) * 3, 30),
                    math.abs(headPosOnScreen.Y - rootPosOnScreen.Y) * 1.5
                )
                
                local boxPosition = Vector2.new(
                    rootPosOnScreen.X - boxSize.X / 2,
                    rootPosOnScreen.Y - boxSize.Y / 2
                )
                
                espData.box.Size = boxSize
                espData.box.Position = boxPosition
                espData.box.Visible = true
                
                espData.nameLabel.Text = player.Name
                espData.nameLabel.Position = Vector2.new(
                    boxPosition.X + boxSize.X / 2,
                    boxPosition.Y - 20
                )
                espData.nameLabel.Visible = true
                
                local healthBarHeight = boxSize.Y
                local healthBarWidth = 5
                local healthBarPosition = Vector2.new(
                    boxPosition.X - 10,
                    boxPosition.Y
                )
                
                espData.healthBarBg.Size = Vector2.new(healthBarWidth, healthBarHeight)
                espData.healthBarBg.Position = healthBarPosition
                espData.healthBarBg.Visible = true
                
                local healthPercentage = math.clamp(humanoid.Health / humanoid.MaxHealth, 0, 1)
                local healthBarFillHeight = healthBarHeight * healthPercentage
                
                espData.healthBar.Size = Vector2.new(healthBarWidth, healthBarFillHeight)
                espData.healthBar.Position = Vector2.new(
                    healthBarPosition.X,
                    healthBarPosition.Y + healthBarHeight - healthBarFillHeight
                )
                espData.healthBar.Visible = true
                
                local red = 1 - healthPercentage
                local green = healthPercentage
                espData.healthBar.Color = Color3.fromRGB(255 * red, 255 * green, 0)
                
                local toolsList = {}
                
                if player.Character then
                    local equippedTool = player.Character:FindFirstChildOfClass("Tool")
                    if equippedTool and equippedTool.Name ~= "Fists" then
                        table.insert(toolsList, "⚔️ " .. equippedTool.Name)
                    end
                end
                
                if player:FindFirstChild("Backpack") then
                    for _, tool in pairs(player.Backpack:GetChildren()) do
                        if tool:IsA("Tool") and tool.Name ~= "Fists" then
                            table.insert(toolsList, "🎒 " .. tool.Name)
                        end
                    end
                end
                
                if #toolsList > 0 then
                    espData.toolLabel.Text = table.concat(toolsList, "\n")
                    espData.toolLabel.Position = Vector2.new(
                        boxPosition.X + boxSize.X + 5,
                        boxPosition.Y
                    )
                    espData.toolLabel.Visible = true
                else
                    espData.toolLabel.Visible = false
                end
                
            else
                espData.box.Visible = false
                espData.nameLabel.Visible = false
                espData.healthBarBg.Visible = false
                espData.healthBar.Visible = false
                espData.toolLabel.Visible = false
            end
        else
            if typeof(player) ~= "string" and ESPObjects[player] then
                espData.box.Visible = false
                espData.nameLabel.Visible = false
                espData.healthBarBg.Visible = false
                espData.healthBar.Visible = false
                espData.toolLabel.Visible = false
            end
        end
    end
end

local function toggleESP(enabled)
    ESPEnabled = enabled
    
    
    for player, _ in pairs(ESPObjects) do
        if typeof(player) ~= "string" then
            removeESP(player)
        end
    end
    
    if ESPEnabled then
        for _, player in pairs(game.Players:GetPlayers()) do
            if player ~= game.Players.LocalPlayer then
                createESP(player)
            end
        end
        
        if not ESPObjects.PlayerAddedConnection then
            ESPObjects.PlayerAddedConnection = game.Players.PlayerAdded:Connect(function(player)
                if player ~= game.Players.LocalPlayer then
                    createESP(player)
                end
            end)
        end
        
        if not ESPObjects.PlayerRemovingConnection then
            ESPObjects.PlayerRemovingConnection = game.Players.PlayerRemoving:Connect(function(player)
                removeESP(player)
            end)
        end
        
        if not ESPObjects.RenderSteppedConnection then
            ESPObjects.RenderSteppedConnection = game:GetService("RunService").RenderStepped:Connect(updateESP)
        end
    else

        if ESPObjects.PlayerAddedConnection then
            ESPObjects.PlayerAddedConnection:Disconnect()
            ESPObjects.PlayerAddedConnection = nil
        end
        
        if ESPObjects.PlayerRemovingConnection then
            ESPObjects.PlayerRemovingConnection:Disconnect()
            ESPObjects.PlayerRemovingConnection = nil
        end
        
        if ESPObjects.RenderSteppedConnection then
            ESPObjects.RenderSteppedConnection:Disconnect()
            ESPObjects.RenderSteppedConnection = nil
        end
        

        for k in pairs(ESPObjects) do
            ESPObjects[k] = nil
        end
    end
end

local function createMobileAimbotButton()
    local gui = Instance.new("ScreenGui")
    gui.Name = "AimbotButtonGui"
    gui.ResetOnSpawn = false
    
    -- ตั้งค่าเพื่อให้ทำงานบนทุกแพลตฟอร์มและป้องกันการลบเมื่อเสียชีวิต
    if syn then
        syn.protect_gui(gui)
    end
    
    local button = Instance.new("TextButton")
    button.Name = "AimbotButton"
    button.Size = UDim2.new(0, 60, 0, 60)
    button.Position = UDim2.new(0.85, 0, 0.5, 0)
    button.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    button.BackgroundTransparency = 0.5
    button.Text = "🎯"
    button.TextSize = 30
    button.BorderSizePixel = 2
    button.BorderColor3 = Color3.fromRGB(255, 255, 255)
    button.AutoButtonColor = true
    button.ZIndex = 1000
    button.Parent = gui
    
    -- ทำให้ปุ่มสามารถลากและวางได้ตามต้องการ
    local dragging = false
    local dragInput
    local dragStart
    local startPos

    local function updateDrag(input)
        local delta = input.Position - dragStart
        button.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
            startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end

    button.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = button.Position
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    button.InputChanged:Connect(function(input)
        if (input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseMovement) and dragging then
            updateDrag(input)
        end
    end)

    -- จัดการการเปิดใช้งาน aimbot
    button.TouchStarted:Connect(function()
        AimbotMobileActive = true
        button.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
    end)

    button.TouchEnded:Connect(function()
        if not AutoAimEnabled then
            AimbotMobileActive = false
            button.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
        end
    end)
    
    -- เพิ่มการจัดการคลิกเพื่อรองรับทั้งกดค้างและคลิก
    button.MouseButton1Down:Connect(function()
        AimbotMobileActive = true
        button.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
    end)
    
    button.MouseButton1Up:Connect(function()
        if not AutoAimEnabled then
            AimbotMobileActive = false
            button.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
        end
    end)

    -- บันทึกการตั้งค่าปุ่ม
    local function saveButtonPosition()
        if pcall(function() 
            writefile("aimbot_button_position.txt", tostring(button.Position.X.Scale) .. "," .. 
                    tostring(button.Position.X.Offset) .. "," .. 
                    tostring(button.Position.Y.Scale) .. "," .. 
                    tostring(button.Position.Y.Offset))
        end) then
            print("บันทึกตำแหน่งปุ่มเรียบร้อยแล้ว")
        end
    end
    
    -- โหลดการตั้งค่าปุ่มที่บันทึกไว้
    local function loadButtonPosition()
        if readfile and isfile and isfile("aimbot_button_position.txt") then
            local data = readfile("aimbot_button_position.txt")
            local parts = {}
            for part in data:gmatch("[^,]+") do
                table.insert(parts, tonumber(part))
            end
            
            if #parts == 4 then
                button.Position = UDim2.new(parts[1], parts[2], parts[3], parts[4])
            end
        end
    end
    
    -- พยายามโหลดตำแหน่งที่บันทึกไว้
    pcall(loadButtonPosition)
    
    -- บันทึกตำแหน่งเมื่อมีการปรับเปลี่ยน
    button.Changed:Connect(function(property)
        if property == "Position" and not dragging then
            pcall(saveButtonPosition)
        end
    end)

    gui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
    AimbotButton = button
    
    return button
end

local function removeMobileAimbotButton()
    if AimbotButton and AimbotButton.Parent then
        AimbotButton.Parent:Destroy()
        AimbotButton = nil
        AimbotMobileActive = false
    end
end

local function updateMobileAimbot()
    if not IsMobile or not AimbotEnabled then return end
    
    if AimbotButtonEnabled and (AimbotMobileActive or AutoAimEnabled) then
        local target = getClosestPlayerInFOV()
        if target and target.Character and target.Character:FindFirstChild(TargetPart) then
            local camera = game.Workspace.CurrentCamera
            local targetPosition = target.Character[TargetPart].Position
            
            if AimbotSmoothing > 1 then
                local currentCFrame = camera.CFrame
                local targetCFrame = CFrame.new(camera.CFrame.Position, targetPosition)
                local smoothingFactor = 1 / AimbotSmoothing * AimbotSensitivity
                camera.CFrame = currentCFrame:Lerp(targetCFrame, smoothingFactor)
            else
                camera.CFrame = CFrame.new(camera.CFrame.Position, targetPosition)
            end
        end
    end
end

IsMobile = checkMobile()

-- ตรวจสอบว่าเป็นอุปกรณ์มือถือหรือไม่
IsMobile = game:GetService("UserInputService").TouchEnabled and not game:GetService("UserInputService").KeyboardEnabled

-- เมื่อเริ่มทำงานบนมือถือ ให้ตั้งค่าปุ่ม aimbot
if IsMobile then
    -- สร้างปุ่ม Aimbot สำหรับมือถือเมื่อเปิด script (ถ้าเปิด toggle ไว้)
    game:GetService("RunService").RenderStepped:Connect(function()
        if AimbotEnabled and AimbotButtonEnabled and not AimbotButton then
            createMobileAimbotButton()
        end
    end)
end

local SpeedToggle = MainTab:CreateToggle({
   Name = "เปิดระบบวิ่ง/บิน",
   CurrentValue = false,
   Flag = "SpeedToggle",
   Callback = function(Value)
      SpeedEnabled = Value
      VerticalSpeed = 0
      IsFlying = false
      
      if not SpeedEnabled then
         if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") then
            game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16
         end
      end
   end,
})

local ESPToggle = MainTab:CreateToggle({
   Name = "แสดงตำแหน่งผู้เล่น (ESP)",
   CurrentValue = false,
   Flag = "ESPToggle",
   Callback = function(Value)
      toggleESP(Value)
   end,
})

local MyNameToggle = MainTab:CreateToggle({
   Name = "ซ่อนชื่อของฉัน",
   CurrentValue = false,
   Flag = "MyNameToggle",
   Callback = function(Value)
      HideMyName = Value
      toggleMyNameVisibility()
   end,
})

local SpeedSlider = MainTab:CreateSlider({
   Name = "ความเร็วในการวิ่ง",
   Range = {16, 500},
   Increment = 1,
   Suffix = "Speed",
   CurrentValue = 16,
   Flag = "SpeedSlider",
   Callback = function(Value)
      SpeedValue = Value
   end,
})

game:GetService("RunService").Heartbeat:Connect(function()
    if SpeedEnabled then
        updateSpeed()
    end
end)

game:GetService("RunService").RenderStepped:Connect(function()
    if AimbotEnabled then
        local camera = game.Workspace.CurrentCamera
        local viewportSize = camera.ViewportSize
        
        FOVCircle.Position = Vector2.new(viewportSize.X / 2, viewportSize.Y / 2)
        CenterDot.Position = Vector2.new(viewportSize.X / 2, viewportSize.Y / 2)
        
        local target = getClosestPlayerInFOV()
        
        if ShowTargetInfo and target and target.Character and target.Character:FindFirstChild(TargetPart) then
            TargetInfoText.Visible = true
            TargetInfoText.Position = Vector2.new(viewportSize.X / 2, viewportSize.Y / 2 + FOVRadius + 20)
            TargetInfoText.Text = "Target: " .. target.Name .. " | Health: " .. math.floor(target.Character.Humanoid.Health)
        else
            TargetInfoText.Visible = false
        end
        
        local isAimbotActive = IsMobile or aimbotKeyDown
        
        if isAimbotActive then
            if target and target.Character and target.Character:FindFirstChild(TargetPart) then
                local targetPosition = target.Character[TargetPart].Position
                
                if AimbotSmoothing > 1 then
                    local currentCFrame = camera.CFrame
                    local targetCFrame = CFrame.new(camera.CFrame.Position, targetPosition)
                    
                    local smoothingFactor = 1 / AimbotSmoothing
                    local sensitivityFactor = smoothingFactor * AimbotSensitivity
                    
                    sensitivityFactor = math.clamp(sensitivityFactor, 0, 1)
                    
                    local smoothedCFrame = currentCFrame:Lerp(targetCFrame, sensitivityFactor)
                    camera.CFrame = smoothedCFrame
                else
                    local currentCFrame = camera.CFrame
                    local targetCFrame = CFrame.new(camera.CFrame.Position, targetPosition)
                    
                    local sensitivityFactor = AimbotSensitivity
                    
                    sensitivityFactor = math.clamp(sensitivityFactor, 0, 1)
                    
                    local adjustedCFrame = currentCFrame:Lerp(targetCFrame, sensitivityFactor)
                    camera.CFrame = adjustedCFrame
                end
            end
        end
    else
        TargetInfoText.Visible = false
    end

    if IsMobile then
        updateMobileAimbot()
    end
end)

game.Players.LocalPlayer.CharacterAdded:Connect(function(char)
    wait(0.5)
    if SpeedEnabled then
        updateSpeed()
    end
    
    if HideMyName then
        toggleMyNameVisibility()
    end
end)

game.Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function(char)
        wait(0.5)
    end)
end)

game.Players.PlayerRemoving:Connect(function(player)
   
    removeESP(player)
end)

if game.Players.LocalPlayer.Character then
    if HideMyName then
        toggleMyNameVisibility()
    end
end

local AimbotToggle = AimbotTab:CreateToggle({
   Name = "เปิดระบบเล็งอัตโนมัติ",
   CurrentValue = false,
   Flag = "AimbotToggle",
   Callback = function(Value)
      AimbotEnabled = Value
      FOVCircle.Visible = Value and ShowFOVCircle 
      CenterDot.Visible = Value and ShowCenterDot 
      
      -- เพิ่มการจัดการปุ่มสำหรับมือถือเมื่อเปิด/ปิด Aimbot
      if IsMobile then
          if Value and AimbotButtonEnabled then
              if not AimbotButton then
                  createMobileAimbotButton()
              end
          else
              removeMobileAimbotButton()
          end
      end
   end,
})

local FOVSlider = AimbotTab:CreateSlider({
   Name = "ขนาดวงกลม FOV",
   Range = {50, 400},
   Increment = 10,
   Suffix = "px",
   CurrentValue = 100,
   Flag = "FOVSlider",
   Callback = function(Value)
      FOVRadius = Value
      FOVCircle.Radius = Value
   end,
})


local KeybindDisplay = AimbotTab:CreateLabel("ปุ่มที่ใช้งานปัจจุบัน: Shift")

local SetKeybindButton = AimbotTab:CreateButton({
   Name = "กดเพื่อตั้งค่าปุ่ม Aimbot",
   Callback = function()
      KeybindDisplay:Set("กำลังรอกดปุ่ม... (กดปุ่มใดก็ได้ที่ต้องการใช้)")
      isWaitingForKeybindInput = true
      
      local connection
      connection = UserInputService.InputBegan:Connect(function(input, gameProcessed)
         if isWaitingForKeybindInput then
            if input.UserInputType == Enum.UserInputType.Keyboard then
               selectedAimbotKey = input.KeyCode
               aimbotKeyName = tostring(input.KeyCode)
               KeybindDisplay:Set("ปุ่มที่ใช้งานปัจจุบัน: " .. aimbotKeyName)
               aimbotKeyDown = false
               
            elseif input.UserInputType == Enum.UserInputType.MouseButton1 then
               selectedAimbotKey = Enum.UserInputType.MouseButton1
               aimbotKeyName = "LeftClick"
               KeybindDisplay:Set("ปุ่มที่ใช้งานปัจจุบัน: คลิกซ้าย")
               aimbotKeyDown = false
               
            elseif input.UserInputType == Enum.UserInputType.MouseButton2 then
               selectedAimbotKey = Enum.UserInputType.MouseButton2
               aimbotKeyName = "RightClick"
               KeybindDisplay:Set("ปุ่มที่ใช้งานปัจจุบัน: คลิกขวา")
               aimbotKeyDown = false
            end
            
            isWaitingForKeybindInput = false
            connection:Disconnect()
         end
      end)
   end,
})

local ResetKeybindButton = AimbotTab:CreateButton({
   Name = "คืนค่าเริ่มต้น (Shift)",
   Callback = function()
      selectedAimbotKey = Enum.KeyCode.LeftShift
      aimbotKeyName = "LeftShift"
      KeybindDisplay:Set("ปุ่มที่ใช้งานปัจจุบัน: Shift")
      aimbotKeyDown = false
      isWaitingForKeybindInput = false
   end,
})


local AimbotSmoothingSlider = AimbotTab:CreateSlider({
   Name = "ความนุ่มนวลในการเล็ง",
   Range = {1, 10},
   Increment = 0.5,
   Suffix = "smooth",
   CurrentValue = 1,
   Flag = "AimbotSmoothingSlider",
   Callback = function(Value)
      AimbotSmoothing = Value
   end,
})



local AimbotSensitivitySlider = AimbotTab:CreateSlider({
   Name = "ความแรงในการเล็งเป้าหมาย",
   Range = {0.1, 1},
   Increment = 0.05,
   Suffix = "เท่า",
   CurrentValue = 1,
   Flag = "AimbotSensitivitySlider",
   Callback = function(Value)
      AimbotSensitivity = Value
   end,
})


local ShowFOVCircleToggle = AimbotTab:CreateToggle({
   Name = "แสดงวงกลม FOV",
   CurrentValue = true,
   Flag = "ShowFOVCircleToggle",
   Callback = function(Value)
      ShowFOVCircle = Value
      if AimbotEnabled then
         FOVCircle.Visible = Value
      end
   end,
})

local ShowCenterDotToggle = AimbotTab:CreateToggle({
   Name = "แสดงจุดศูนย์กลาง",
   CurrentValue = true,
   Flag = "ShowCenterDotToggle",
   Callback = function(Value)
      ShowCenterDot = Value
      if AimbotEnabled then
         CenterDot.Visible = Value
      end
   end,
})

local TargetInfoToggle = AimbotTab:CreateToggle({
   Name = "แสดงข้อมูลเป้าหมาย",
   CurrentValue = false,
   Flag = "TargetInfoToggle",
   Callback = function(Value)
      ShowTargetInfo = Value
   end,
})

local FOVColorPicker = AimbotTab:CreateColorPicker({
    Name = "สีวงกลม FOV",
    Color = Color3.fromRGB(255, 255, 255),
    Flag = "FOVColorPicker",
    Callback = function(Value)
        FOVCircle.Color = Value
    end
})

local MobileAimbotToggle = AimbotTab:CreateToggle({
   Name = "เปิดปุ่ม Aimbot มือถือ",
   CurrentValue = false,
   Flag = "MobileAimbotToggle",
   Callback = function(Value)
      if not IsMobile then return end
      AimbotButtonEnabled = Value
      if Value then
          createMobileAimbotButton()
      else
          removeMobileAimbotButton()
      end
   end,
})

local AutoAimToggle = AimbotTab:CreateToggle({
   Name = "เปิดล็อคเป้าอัตโนมัติ (มือถือ)",
   CurrentValue = false,
   Flag = "AutoAimToggle",
   Callback = function(Value)
      if not IsMobile then return end
      AutoAimEnabled = Value
   end,
})

local MobileAimbotSizeSlider = AimbotTab:CreateSlider({
   Name = "ขนาดปุ่ม Aimbot มือถือ",
   Range = {40, 120},
   Increment = 5,
   Suffix = "px",
   CurrentValue = 60,
   Flag = "MobileAimbotSizeSlider",
   Callback = function(Value)
      if AimbotButton then
         AimbotButton.Size = UDim2.new(0, Value, 0, Value)
      end
   end,
})

local MobileAimbotOpacitySlider = AimbotTab:CreateSlider({
   Name = "ความโปร่งใสของปุ่ม",
   Range = {0, 1},
   Increment = 0.05,
   Suffix = "opacity",
   CurrentValue = 0.5,
   Flag = "MobileAimbotOpacitySlider",
   Callback = function(Value)
      if AimbotButton then
         AimbotButton.BackgroundTransparency = 1 - Value
      end
   end,
})

local MobileAimbotSymbolInput = AimbotTab:CreateInput({
   Name = "สัญลักษณ์บนปุ่ม",
   PlaceholderText = "เช่น 🎯, 🔫, 👁️",
   RemoveTextAfterFocusLost = false,
   Callback = function(Text)
      if AimbotButton and Text ~= "" then
         AimbotButton.Text = Text
      end
   end,
})

local PartyToggle = PartyTab:CreateToggle({
   Name = "เปิดใช้งานระบบปาร์ตี้",
   CurrentValue = false,
   Flag = "PartyToggle",
   Callback = function(Value)
      PartyEnabled = Value
   end,
})

local PartyInput = PartyTab:CreateInput({
   Name = "ชื่อผู้เล่น",
   PlaceholderText = "ใส่ชื่อผู้เล่นที่ต้องการเพิ่มในปาร์ตี้",
   RemoveTextAfterFocusLost = false,
   Callback = function(Text)
      CurrentPartyInput = Text
   end,
})

local PartyAddButton = PartyTab:CreateButton({
   Name = "เพิ่มผู้เล่นในปาร์ตี้",
   Callback = function()
      if CurrentPartyInput ~= "" then
         local playerExists = false
         for _, player in pairs(game.Players:GetPlayers()) do
            if player.Name:lower() == CurrentPartyInput:lower() then
               playerExists = true
               CurrentPartyInput = player.Name
               break
            end
         end
         
         local alreadyInParty = false
         for _, memberName in pairs(PartyMembers) do
            if memberName:lower() == CurrentPartyInput:lower() then
               alreadyInParty = true
               break
            end
         end
         
         if not alreadyInParty then
            table.insert(PartyMembers, CurrentPartyInput)
            Rayfield:Notify({
               Title = "ระบบปาร์ตี้",
               Content = "เพิ่ม " .. CurrentPartyInput .. " เข้าปาร์ตี้แล้ว" .. (playerExists and "" or " (ผู้เล่นอาจไม่ได้อยู่ในเกม)"),
               Duration = 3,
            })
            
            updatePartyList()
         else
            Rayfield:Notify({
               Title = "ระบบปาร์ตี้",
               Content = CurrentPartyInput .. " อยู่ในปาร์ตี้อยู่แล้ว",
               Duration = 3,
            })
         end
      else
         Rayfield:Notify({
            Title = "ระบบปาร์ตี้",
            Content = "กรุณาใส่ชื่อผู้เล่นก่อน",
            Duration = 3,
         })
      end
   end,
})

local PartyListLabel = PartyTab:CreateLabel("สมาชิกปาร์ตี้: ไม่มีสมาชิก")

function updatePartyList()
    if #PartyMembers == 0 then
        PartyListLabel:Set("สมาชิกปาร์ตี้: ไม่มีสมาชิก")
    else
        local membersList = "สมาชิกปาร์ตี้: " .. table.concat(PartyMembers, ", ")
        PartyListLabel:Set(membersList)
    end
end

local PartyClearButton = PartyTab:CreateButton({
   Name = "ลบสมาชิกทั้งหมด",
   Callback = function()
      PartyMembers = {}
      updatePartyList()
      Rayfield:Notify({
         Title = "ระบบปาร์ตี้",
         Content = "ลบสมาชิกทั้งหมดออกจากปาร์ตี้แล้ว",
         Duration = 3,
      })
   end,
})

local PartyRemoveInput = PartyTab:CreateInput({
   Name = "ลบผู้เล่นออกจากปาร์ตี้",
   PlaceholderText = "ใส่ชื่อผู้เล่นที่ต้องการลบออกจากปาร์ตี้",
   RemoveTextAfterFocusLost = false,
   Callback = function(Text)
      RemovePartyInput = Text
   end,
})

local PartyRemoveButton = PartyTab:CreateButton({
   Name = "ลบผู้เล่น",
   Callback = function()
      if RemovePartyInput ~= "" then
         local removed = false
         for i, memberName in pairs(PartyMembers) do
            if memberName:lower() == RemovePartyInput:lower() then
               table.remove(PartyMembers, i)
               removed = true
               break
            end
         end
         
         if removed then
            updatePartyList()
            Rayfield:Notify({
               Title = "ระบบปาร์ตี้",
               Content = "ลบ " .. RemovePartyInput .. " ออกจากปาร์ตี้แล้ว",
               Duration = 3,
            })
         else
            Rayfield:Notify({
               Title = "ระบบปาร์ตี้",
               Content = "ไม่พบ " .. RemovePartyInput .. " ในปาร์ตี้",
               Duration = 3,
            })
         end
      else
         Rayfield:Notify({
            Title = "ระบบปาร์ตี้",
            Content = "กรุณาใส่ชื่อผู้เล่นก่อน",
            Duration = 3,
         })
      end
   end,
})

local nameHidingHeartbeat = game:GetService("RunService").Heartbeat:Connect(function()
    if HideMyName then
        if game.Players.LocalPlayer.Character then
            for _, gui in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
                if (gui:IsA("BillboardGui") or gui:IsA("SurfaceGui")) and
                   (gui.Name:match("PlayerName") or gui.Name:match("NameTag") or gui.Name:match("Display") or gui.Name:match("Head")) then
                    if gui.Enabled then
                        gui.Enabled = false
                    end
                end
            end
        end
    end
end)

game.Players.LocalPlayer.CharacterRemoving:Connect(function()
    if nameHidingHeartbeat then
        nameHidingHeartbeat:Disconnect()
    end
end)
