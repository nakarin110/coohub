local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "Coo hub",
   LoadingTitle = "Coo OT",
   LoadingSubtitle = "สร้างโดย COOHUB",
   ConfigurationSaving = {
      Enabled = false,
      FolderName = nil,
      FileName = "W"
   },
   KeySystem = true,
   KeySettings = {
      Title = "Coo Hub - กรุณาใส่คีย์",
      Subtitle = "คีย์จำเป็นต้องใส่ทุกครั้งที่เข้าเกม",
      Note = "กรุณาติดต่อผู้สร้างเพื่อขอคีย์",
      FileName = "hub",
      SaveKey = false,
      GrabKeyFromSite = false,
      Key = {
         "coo1-QWE2-RT34-5YUI", "coo2-AS76-F4H3-2JKL", "coo3-ZXC5-VB67-NM89",
         "coo4-123A-BC45-D6EF", "coo5-GHI7-JK89-L0MN", "coo6-OPQ1-RST2-UV34",
         "coo7-WXY5-Z678-9012", "coo8-34A5-BC67-DEF8", "coo9-GHI9-JK01-LMN2",
         "coo10-OP34-QRS5-TUV6", "coo11-WXY7-Z890-123A", "coo12-BCD4-EFG5-HIJ6",
         "coo13-KLM7-NOP8-QRS9", "coo14-TUV0-WXY1-ZAB2", "coo15-CDE3-FGH4-IJK5",
         "coo16-LMN6-OPQ7-RST8", "coo17-UVW9-XYZ0-123A", "coo18-BCD4-EFG5-HIJ6",
         "coo19-KLM7-NOP8-QRS9", "coo20-TUV0-WXY1-ZAB2", "coo21-CDE3-FGH4-IJK5",
         "coo22-LMN6-OPQ7-RST8", "coo23-UVW9-XYZ0-123A", "coo24-BCD4-EFG5-HIJ6",
         "coo25-KLM7-NOP8-QRS9", "coo26-TUV0-WXY1-ZAB2", "coo27-CDE3-FGH4-IJK5",
         "coo28-LMN6-OPQ7-RST8", "coo29-UVW9-XYZ0-123A", "coo30-BCD4-EFG5-HIJ6",
         "coo31-KLM7-NOP8-QRS9", "coo32-TUV0-WXY1-ZAB2", "coo33-CDE3-FGH4-IJK5",
         "coo34-LMN6-OPQ7-RST8", "coo35-UVW9-XYZ0-123A", "coo36-BCD4-EFG5-HIJ6",
         "coo37-KLM7-NOP8-QRS9", "coo38-TUV0-WXY1-ZAB2", "coo39-CDE3-FGH4-IJK5",
         "coo40-LMN6-OPQ7-RST8", "coo41-UVW9-XYZ0-123A", "coo42-BCD4-EFG5-HIJ6",
         "coo43-KLM7-NOP8-QRS9", "coo44-TUV0-WXY1-ZAB2", "coo45-CDE3-FGH4-IJK5",
         "coo46-LMN6-OPQ7-RST8", "coo47-UVW9-XYZ0-123A", "coo48-BCD4-EFG5-HIJ6",
         "coo49-KLM7-NOP8-QRS9", "coo50-TUV0-WXY1-ZAB2", "coo51-CDE3-FGH4-IJK5",
         "coo52-LMN6-OPQ7-RST8", "coo53-UVW9-XYZ0-123A", "coo54-BCD4-EFG5-HIJ6",
         "coo55-KLM7-NOP8-QRS9", "coo56-TUV0-WXY1-ZAB2", "coo57-CDE3-FGH4-IJK5",
         "coo58-LMN6-OPQ7-RST8", "coo59-UVW9-XYZ0-123A", "coo60-BCD4-EFG5-HIJ6",
         "coo61-KLM7-NOP8-QRS9", "coo62-TUV0-WXY1-ZAB2", "coo63-CDE3-FGH4-IJK5",
         "coo64-LMN6-OPQ7-RST8", "coo65-UVW9-XYZ0-123A", "coo66-BCD4-EFG5-HIJ6",
         "coo67-KLM7-NOP8-QRS9", "coo68-TUV0-WXY1-ZAB2", "coo69-CDE3-FGH4-IJK5",
         "coo70-LMN6-OPQ7-RST8", "coo71-UVW9-XYZ0-123A", "coo72-BCD4-EFG5-HIJ6",
         "coo73-KLM7-NOP8-QRS9", "coo74-TUV0-WXY1-ZAB2", "coo75-CDE3-FGH4-IJK5",
         "coo76-LMN6-OPQ7-RST8", "coo77-UVW9-XYZ0-123A", "coo78-BCD4-EFG5-HIJ6",
         "coo79-KLM7-NOP8-QRS9", "coo80-TUV0-WXY1-ZAB2", "coo81-CDE3-FGH4-IJK5",
         "coo82-LMN6-OPQ7-RST8", "coo83-UVW9-XYZ0-123A", "coo84-BCD4-EFG5-HIJ6",
         "coo85-KLM7-NOP8-QRS9", "coo86-TUV0-WXY1-ZAB2", "coo87-CDE3-FGH4-IJK5",
         "coo88-LMN6-OPQ7-RST8", "coo89-UVW9-XYZ0-123A", "coo90-BCD4-EFG5-HIJ6",
         "coo91-KLM7-NOP8-QRS9", "coo92-TUV0-WXY1-ZAB2", "coo93-CDE3-FGH4-IJK5",
         "coo94-LMN6-OPQ7-RST8", "coo95-UVW9-XYZ0-123A", "coo96-BCD4-EFG5-HIJ6",
         "coo97-KLM7-NOP8-QRS9", "coo98-TUV0-WXY1-ZAB2", "coo99-CDE3-FGH4-IJK5",
         "coo100-LMN6-OPQ7-RST8"
      }
   }
})

local MainTab = Window:CreateTab("หน้าหลัก", nil)
local MainSection = MainTab:CreateSection("เมนูหลัก")

-- Detect if the user is on mobile
local UserInputService = game:GetService("UserInputService")
local isMobile = UserInputService.TouchEnabled and not UserInputService.KeyboardEnabled

-- Variables for movement system
local SpeedEnabled = false
local SpeedValue = 16
local VerticalSpeed = 0
local IsFlying = false
local IsFrozen = false
local FrozenPosition = nil

-- Mobile-specific variables
local MobileControlsEnabled = false
local TouchControls = {}
local TouchDirections = {Up = false, Down = false, Left = false, Right = false}
local DriveDirection = Vector3.new(0, 0, 0)

-- Create mobile controls if on mobile device
if isMobile then
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "CooHubMobileControls"
    ScreenGui.ResetOnSpawn = false
    ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
    
    -- Function to create touch button
    local function createTouchButton(name, position, text)
        local button = Instance.new("TextButton")
        button.Name = name
        button.Size = UDim2.new(0, 50, 0, 50)
        button.Position = position
        button.Text = text
        button.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
        button.BackgroundTransparency = 0.5
        button.TextColor3 = Color3.fromRGB(255, 255, 255)
        button.BorderSizePixel = 2
        button.BorderColor3 = Color3.fromRGB(255, 255, 255)
        button.Parent = ScreenGui
        button.Visible = false
        
        return button
    end
    
    -- Create directional buttons
    TouchControls.Up = createTouchButton("UpButton", UDim2.new(0.2, 0, 0.7, 0), "↑")
    TouchControls.Down = createTouchButton("DownButton", UDim2.new(0.2, 0, 0.8, 0), "↓")
    TouchControls.Left = createTouchButton("LeftButton", UDim2.new(0.1, 0, 0.8, 0), "←")
    TouchControls.Right = createTouchButton("RightButton", UDim2.new(0.3, 0, 0.8, 0), "→")
    
    -- Create fly buttons
    TouchControls.FlyUp = createTouchButton("FlyUpButton", UDim2.new(0.8, 0, 0.7, 0), "⇧")
    TouchControls.FlyDown = createTouchButton("FlyDownButton", UDim2.new(0.8, 0, 0.8, 0), "⇩")
    
    -- Create freeze button
    TouchControls.Freeze = createTouchButton("FreezeButton", UDim2.new(0.5, 0, 0.8, 0), "T")
    
    -- Handle touch events for mobile controls
    for direction, button in pairs(TouchControls) do
        button.TouchLongPress:Connect(function()
            if direction == "Up" then
                TouchDirections.Up = true
            elseif direction == "Down" then
                TouchDirections.Down = true
            elseif direction == "Left" then
                TouchDirections.Left = true
            elseif direction == "Right" then
                TouchDirections.Right = true
            elseif direction == "FlyUp" then
                VerticalSpeed = SpeedValue
                IsFlying = true
            elseif direction == "FlyDown" then
                VerticalSpeed = -SpeedValue
                IsFlying = true
            elseif direction == "Freeze" and not IsFrozen then
                IsFrozen = not IsFrozen
                
                if game.Players.LocalPlayer.Character then
                    local rootPart = game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
                    local humanoid = game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
                    
                    if rootPart and humanoid then
                        if IsFrozen then
                            FrozenPosition = rootPart.CFrame
                            humanoid.WalkSpeed = 0
                            VerticalSpeed = 0
                            IsFlying = false
                        else
                            FrozenPosition = nil
                            humanoid.WalkSpeed = SpeedValue
                        end
                    end
                end
            end
        end)
        
        button.TouchTap:Connect(function()
            if direction == "Freeze" then
                IsFrozen = not IsFrozen
                
                if game.Players.LocalPlayer.Character then
                    local rootPart = game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
                    local humanoid = game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
                    
                    if rootPart and humanoid then
                        if IsFrozen then
                            FrozenPosition = rootPart.CFrame
                            humanoid.WalkSpeed = 0
                            VerticalSpeed = 0
                            IsFlying = false
                        else
                            FrozenPosition = nil
                            humanoid.WalkSpeed = SpeedValue
                        end
                    end
                end
            end
        end)
        
        button.TouchEnded:Connect(function()
            if direction == "Up" then
                TouchDirections.Up = false
            elseif direction == "Down" then
                TouchDirections.Down = false
            elseif direction == "Left" then
                TouchDirections.Left = false
            elseif direction == "Right" then
                TouchDirections.Right = false
            elseif direction == "FlyUp" or direction == "FlyDown" then
                VerticalSpeed = 0
                IsFlying = false
            end
        end)
    end
end

-- Function to calculate movement direction from touch inputs
local function calculateMobileDirection()
    local direction = Vector3.new(0, 0, 0)
    
    if TouchDirections.Up then
        direction = direction + Vector3.new(0, 0, -1)
    end
    if TouchDirections.Down then
        direction = direction + Vector3.new(0, 0, 1)
    end
    if TouchDirections.Left then
        direction = direction + Vector3.new(-1, 0, 0)
    end
    if TouchDirections.Right then
        direction = direction + Vector3.new(1, 0, 0)
    end
    
    -- Normalize the direction vector if it's not zero
    if direction.Magnitude > 0 then
        direction = direction.Unit
    end
    
    return direction
end

-- Function to toggle visibility of mobile controls
local function toggleMobileControls(visible)
    if isMobile then
        for _, button in pairs(TouchControls) do
            button.Visible = visible
        end
        MobileControlsEnabled = visible
    end
end

local function updateSpeed()
    if SpeedEnabled and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        local humanoid = game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
        local rootPart = game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
        
        if humanoid and rootPart then
            if IsFrozen and FrozenPosition then
                rootPart.CFrame = FrozenPosition
                return
            end

            if not IsFrozen then
                if isMobile and MobileControlsEnabled then
                    -- Handle mobile movement based on touch controls
                    local moveDirection = calculateMobileDirection()
                    
                    -- If we have a movement direction, apply it
                    if moveDirection.Magnitude > 0 then
                        -- Transform direction relative to camera
                        local camera = workspace.CurrentCamera
                        local cameraDirection = camera.CFrame.LookVector
                        local rightVector = camera.CFrame.RightVector
                        
                        local adjustedDirection = (rightVector * moveDirection.X) + (Vector3.new(cameraDirection.X, 0, cameraDirection.Z).Unit * moveDirection.Z)
                        rootPart.CFrame = rootPart.CFrame + adjustedDirection * SpeedValue * game:GetService("RunService").Heartbeat:Wait()
                    end
                else
                    -- PC movement handling
                    if humanoid.MoveDirection.Magnitude > 0 then
                        local moveDirection = humanoid.MoveDirection * SpeedValue
                        rootPart.CFrame = rootPart.CFrame + moveDirection * game:GetService("RunService").Heartbeat:Wait()
                    end
                end
                
                if IsFlying then
                    rootPart.CFrame = rootPart.CFrame + Vector3.new(0, VerticalSpeed, 0) * game:GetService("RunService").Heartbeat:Wait()
                end
            end
        end
    end
end

-- Check if the player is in a vehicle
local function isInVehicle()
    local character = game.Players.LocalPlayer.Character
    if character then
        local humanoid = character:FindFirstChild("Humanoid")
        if humanoid then
            return humanoid.SeatPart ~= nil
        end
    end
    return false
end

-- Original keyboard input handling - keep for PC users
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if SpeedEnabled and not gameProcessed and not isMobile then
        if input.KeyCode == Enum.KeyCode.Space then
            if not IsFrozen then
                VerticalSpeed = SpeedValue
                IsFlying = true
            end
        elseif input.KeyCode == Enum.KeyCode.LeftControl then
            if not IsFrozen then
                VerticalSpeed = -SpeedValue
                IsFlying = true
            end
        elseif input.KeyCode == Enum.KeyCode.T then
            IsFrozen = not IsFrozen
            
            if game.Players.LocalPlayer.Character then
                local rootPart = game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
                local humanoid = game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
                
                if rootPart and humanoid then
                    if IsFrozen then
                        FrozenPosition = rootPart.CFrame
                        humanoid.WalkSpeed = 0
                        VerticalSpeed = 0
                        IsFlying = false
                    else
                        FrozenPosition = nil
                        humanoid.WalkSpeed = SpeedValue
                    end
                end
            end
        end
    end
end)

UserInputService.InputEnded:Connect(function(input, gameProcessed)
    if not isMobile and (input.KeyCode == Enum.KeyCode.Space or input.KeyCode == Enum.KeyCode.LeftControl) then
        VerticalSpeed = 0
        IsFlying = false
    end
end)

local SpeedToggle = MainTab:CreateToggle({
   Name = "เปิดระบบวิ่ง/บิน",
   CurrentValue = false,
   Flag = "SpeedToggle",
   Callback = function(Value)
      SpeedEnabled = Value
      VerticalSpeed = 0
      IsFlying = false
      toggleMobileControls(Value) -- Show/hide mobile controls based on toggle state
      
      if not SpeedEnabled then
         if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") then
            game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16
         end
      end
   end,
})

local SpeedSlider = MainTab:CreateSlider({
   Name = "ความเร็วในการวิ่ง",
   Range = {16, 500},
   Increment = 1,
   Suffix = "Speed",
   CurrentValue = 16,
   Flag = "SpeedSlider",
   Callback = function(Value)
      SpeedValue = Value
   end,
})

-- Check for vehicle
game:GetService("RunService").Heartbeat:Connect(function()
    if SpeedEnabled then
        local inVehicle = isInVehicle()
        
        -- If we're in a vehicle, hide mobile controls
        if isMobile and MobileControlsEnabled then
            for _, button in pairs(TouchControls) do
                button.Visible = not inVehicle
            end
        end
        
        -- Only update speed if we're not in a vehicle
        if not inVehicle then
            updateSpeed()
        end
    end
end)

game.Players.LocalPlayer.CharacterAdded:Connect(function(char)
    wait(0.5)
    if SpeedEnabled then
        updateSpeed()
    end
end)
