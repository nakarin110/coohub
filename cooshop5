local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "Coo hub",
   LoadingTitle = "Coo OT",
   LoadingSubtitle = "สร้างโดย COOHUB",
   ConfigurationSaving = {
      Enabled = false,
      FolderName = nil,
      FileName = "W"
   },
   KeySystem = true,
   KeySettings = {
      Title = "Coo Hub - กรุณาใส่คีย์",
      Subtitle = "คีย์จำเป็นต้องใส่ทุกครั้งที่เข้าเกม",
      Note = "กรุณาติดต่อผู้สร้างเพื่อขอคีย์",
      FileName = "hub",
      SaveKey = false,
      GrabKeyFromSite = false,
      Key = {
         "coo1-QWE2-RT34-5YUI", "coo2-AS76-F4H3-2JKL", "coo3-ZXC5-VB67-NM89",
         "coo4-123A-BC45-D6EF", "coo5-GHI7-JK89-L0MN", "coo6-OPQ1-RST2-UV34",
         "coo7-WXY5-Z678-9012", "coo8-34A5-BC67-DEF8", "coo9-GHI9-JK01-LMN2",
         "coo10-OP34-QRS5-TUV6", "coo11-WXY7-Z890-123A", "coo12-BCD4-EFG5-HIJ6",
         "coo13-KLM7-NOP8-QRS9", "coo14-TUV0-WXY1-ZAB2", "coo15-CDE3-FGH4-IJK5",
         "coo16-LMN6-OPQ7-RST8", "coo17-UVW9-XYZ0-123A", "coo18-BCD4-EFG5-HIJ6",
         "coo19-KLM7-NOP8-QRS9", "coo20-TUV0-WXY1-ZAB2", "coo21-CDE3-FGH4-IJK5",
         "coo22-LMN6-OPQ7-RST8", "coo23-UVW9-XYZ0-123A", "coo24-BCD4-EFG5-HIJ6",
         "coo25-KLM7-NOP8-QRS9", "coo26-TUV0-WXY1-ZAB2", "coo27-CDE3-FGH4-IJK5",
         "coo28-LMN6-OPQ7-RST8", "coo29-UVW9-XYZ0-123A", "coo30-BCD4-EFG5-HIJ6",
         "coo31-KLM7-NOP8-QRS9", "coo32-TUV0-WXY1-ZAB2", "coo33-CDE3-FGH4-IJK5",
         "coo34-LMN6-OPQ7-RST8", "coo35-UVW9-XYZ0-123A", "coo36-BCD4-EFG5-HIJ6",
         "coo37-KLM7-NOP8-QRS9", "coo38-TUV0-WXY1-ZAB2", "coo39-CDE3-FGH4-IJK5",
         "coo40-LMN6-OPQ7-RST8", "coo41-UVW9-XYZ0-123A", "coo42-BCD4-EFG5-HIJ6",
         "coo43-KLM7-NOP8-QRS9", "coo44-TUV0-WXY1-ZAB2", "coo45-CDE3-FGH4-IJK5",
         "coo46-LMN6-OPQ7-RST8", "coo47-UVW9-XYZ0-123A", "coo48-BCD4-EFG5-HIJ6",
         "coo49-KLM7-NOP8-QRS9", "coo50-TUV0-WXY1-ZAB2", "coo51-CDE3-FGH4-IJK5",
         "coo52-LMN6-OPQ7-RST8", "coo53-UVW9-XYZ0-123A", "coo54-BCD4-EFG5-HIJ6",
         "coo55-KLM7-NOP8-QRS9", "coo56-TUV0-WXY1-ZAB2", "coo57-CDE3-FGH4-IJK5",
         "coo58-LMN6-OPQ7-RST8", "coo59-UVW9-XYZ0-123A", "coo60-BCD4-EFG5-HIJ6",
         "coo61-KLM7-NOP8-QRS9", "coo62-TUV0-WXY1-ZAB2", "coo63-CDE3-FGH4-IJK5",
         "coo64-LMN6-OPQ7-RST8", "coo65-UVW9-XYZ0-123A", "coo66-BCD4-EFG5-HIJ6",
         "coo67-KLM7-NOP8-QRS9", "coo68-TUV0-WXY1-ZAB2", "coo69-CDE3-FGH4-IJK5",
         "coo70-LMN6-OPQ7-RST8", "coo71-UVW9-XYZ0-123A", "coo72-BCD4-EFG5-HIJ6",
         "coo73-KLM7-NOP8-QRS9", "coo74-TUV0-WXY1-ZAB2", "coo75-CDE3-FGH4-IJK5",
         "coo76-LMN6-OPQ7-RST8", "coo77-UVW9-XYZ0-123A", "coo78-BCD4-EFG5-HIJ6",
         "coo79-KLM7-NOP8-QRS9", "coo80-TUV0-WXY1-ZAB2", "coo81-CDE3-FGH4-IJK5",
         "coo82-LMN6-OPQ7-RST8", "coo83-UVW9-XYZ0-123A", "coo84-BCD4-EFG5-HIJ6",
         "coo85-KLM7-NOP8-QRS9", "coo86-TUV0-WXY1-ZAB2", "coo87-CDE3-FGH4-IJK5",
         "coo88-LMN6-OPQ7-RST8", "coo89-UVW9-XYZ0-123A", "coo90-BCD4-EFG5-HIJ6",
         "coo91-KLM7-NOP8-QRS9", "coo92-TUV0-WXY1-ZAB2", "coo93-CDE3-FGH4-IJK5",
         "coo94-LMN6-OPQ7-RST8", "coo95-UVW9-XYZ0-123A", "coo96-BCD4-EFG5-HIJ6",
         "coo97-KLM7-NOP8-QRS9", "coo98-TUV0-WXY1-ZAB2", "coo99-CDE3-FGH4-IJK5",
         "coo100-LMN6-OPQ7-RST8"
      }
   }
})

local MainTab = Window:CreateTab("หน้าหลัก", nil)
local MainSection = MainTab:CreateSection("เมนูหลัก")

-- Create Aimbot Tab
local AimbotTab = Window:CreateTab("Aimbot", nil)
local AimbotSection = AimbotTab:CreateSection("ระบบเล็งอัตโนมัติ")

local SpeedEnabled = false
local SpeedValue = 16
local VerticalSpeed = 0
local IsFlying = false
local IsFrozen = false
local FrozenPosition = nil
local ESPEnabled = false
local ESPObjects = {}

local AimbotEnabled = false
local AimbotActive = false
local FOVRadius = 100
local FOVColorR, FOVColorG, FOVColorB = 255, 255, 255
local TargetPart = "Head" -- Default target part
local ShowFOVCircle = true -- New variable to control FOV circle visibility
local ShowCenterDot = true -- New variable to control center dot visibility

-- Add additional variables for Aimbot customization
local AimbotSmoothing = 1 -- No smoothing by default (instant)
local AimbotSensitivity = 1 -- Default sensitivity (full strength)
local ShowTargetInfo = false
local TargetInfoText = Drawing.new("Text")
TargetInfoText.Visible = false
TargetInfoText.Size = 18
TargetInfoText.Color = Color3.fromRGB(255, 255, 255)
TargetInfoText.Transparency = 1
TargetInfoText.ZIndex = 1001
TargetInfoText.Center = true
TargetInfoText.Font = 3 -- Default font

-- Mobile support variables
local IsMobile = false
local AimbotButtonEnabled = false
local AimbotMobileActive = false
local AimbotButton = nil

-- Check if the user is on mobile
local function checkMobile()
    return game:GetService("UserInputService").TouchEnabled and not game:GetService("UserInputService").KeyboardEnabled
end

-- Custom keybind variables
local aimbotKeyDown = false
local selectedAimbotKey = Enum.KeyCode.LeftShift -- Default key
local aimbotKeyName = "LeftShift" -- Display name for the key
local isWaitingForKeybindInput = false

local FOVCircle = Drawing.new("Circle")
FOVCircle.Thickness = 2
FOVCircle.NumSides = 60
FOVCircle.Radius = FOVRadius
FOVCircle.Filled = false
FOVCircle.Visible = false
FOVCircle.ZIndex = 999
FOVCircle.Transparency = 1
FOVCircle.Color = Color3.fromRGB(FOVColorR, FOVColorG, FOVColorB)

local CenterDot = Drawing.new("Circle")
CenterDot.Thickness = 1
CenterDot.NumSides = 30
CenterDot.Radius = 2
CenterDot.Filled = true
CenterDot.Visible = false
CenterDot.ZIndex = 1000
CenterDot.Transparency = 1
CenterDot.Color = Color3.fromRGB(255, 0, 0)

local function updateSpeed()
    if SpeedEnabled and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        local humanoid = game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
        local rootPart = game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
        
        if humanoid and rootPart then
            if IsFrozen and FrozenPosition then
                rootPart.CFrame = FrozenPosition
                return
            end

            if not IsFrozen then
                if humanoid.MoveDirection.Magnitude > 0 then
                    local moveDirection = humanoid.MoveDirection * SpeedValue
                    rootPart.CFrame = rootPart.CFrame + moveDirection * game:GetService("RunService").Heartbeat:Wait()
                end
                
                if IsFlying then
                    rootPart.CFrame = rootPart.CFrame + Vector3.new(0, VerticalSpeed, 0) * game:GetService("RunService").Heartbeat:Wait()
                end
            end
        end
    end
end

local function getClosestPlayerInFOV()
    local closestPlayer = nil
    local shortestDistance = FOVRadius
    
    local localPlayer = game.Players.LocalPlayer
    local camera = game.Workspace.CurrentCamera
    local centerScreen = Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 2)
    
    FOVCircle.Position = centerScreen
    CenterDot.Position = centerScreen
    
    for _, player in pairs(game.Players:GetPlayers()) do
        if player ~= localPlayer and 
           player.Character and 
           player.Character:FindFirstChild(TargetPart) and 
           player.Character:FindFirstChild("Humanoid") and 
           player.Character.Humanoid.Health > 0 then
            
            local targetPart = player.Character[TargetPart]
            local screenPoint = camera:WorldToScreenPoint(targetPart.Position)
            
            if screenPoint.Z > 0 then
                local vectorDistance = (centerScreen - Vector2.new(screenPoint.X, screenPoint.Y)).Magnitude
                
                if vectorDistance < shortestDistance then
                    closestPlayer = player
                    shortestDistance = vectorDistance
                end
            end
        end
    end
    
    return closestPlayer
end

local UserInputService = game:GetService("UserInputService")

UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if SpeedEnabled and not gameProcessed then
        if input.KeyCode == Enum.KeyCode.Space then
            if not IsFrozen then
                VerticalSpeed = SpeedValue
                IsFlying = true
            end
        elseif input.KeyCode == Enum.KeyCode.LeftControl then
            if not IsFrozen then
                VerticalSpeed = -SpeedValue
                IsFlying = true
            end
        elseif input.KeyCode == Enum.KeyCode.T then
            IsFrozen = not IsFrozen
            
            if game.Players.LocalPlayer.Character then
                local rootPart = game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
                local humanoid = game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
                
                if rootPart and humanoid then
                    if IsFrozen then
                        FrozenPosition = rootPart.CFrame
                        humanoid.WalkSpeed = 0
                        VerticalSpeed = 0
                        IsFlying = false
                    else
                        FrozenPosition = nil
                        humanoid.WalkSpeed = SpeedValue
                    end
                end
            end
        end
    end
    
    -- Check for custom aimbot key
    if (input.KeyCode == selectedAimbotKey) or 
       (selectedAimbotKey == Enum.UserInputType.MouseButton1 and input.UserInputType == Enum.UserInputType.MouseButton1) or
       (selectedAimbotKey == Enum.UserInputType.MouseButton2 and input.UserInputType == Enum.UserInputType.MouseButton2) then
        if not isWaitingForKeybindInput then
            aimbotKeyDown = true
        end
    end
end)

UserInputService.InputEnded:Connect(function(input, gameProcessed)
    if input.KeyCode == Enum.KeyCode.Space or input.KeyCode == Enum.KeyCode.LeftControl then
        VerticalSpeed = 0
        IsFlying = false
    end
    
    -- Check for custom aimbot key release
    if (input.KeyCode == selectedAimbotKey) or 
       (selectedAimbotKey == Enum.UserInputType.MouseButton1 and input.UserInputType == Enum.UserInputType.MouseButton1) or
       (selectedAimbotKey == Enum.UserInputType.MouseButton2 and input.UserInputType == Enum.UserInputType.MouseButton2) then
        aimbotKeyDown = false
    end
end)

local function createESP(player)
    if player == game.Players.LocalPlayer then return end
    
    if ESPObjects[player] then removeESP(player) end
    
    local highlight = Instance.new("Highlight")
    highlight.Name = "ESPHighlight"
    highlight.FillTransparency = 0.5
    highlight.OutlineTransparency = 0
    highlight.FillColor = Color3.fromRGB(255, 0, 0)
    highlight.OutlineColor = Color3.fromRGB(255, 255, 255)
    
    ESPObjects[player] = highlight
    
    if player.Character then
        highlight.Parent = player.Character
        highlight.Adornee = player.Character
    end
    

    player.CharacterAdded:Connect(function(character)
        if ESPEnabled and ESPObjects[player] then
            highlight.Parent = character
            highlight.Adornee = character
        end
    end)
end

local function removeESP(player)
    if ESPObjects[player] then
        ESPObjects[player]:Destroy()
        ESPObjects[player] = nil
    end
end

local function toggleESP(enabled)
    ESPEnabled = enabled
    
    if ESPEnabled then
        for _, player in pairs(game.Players:GetPlayers()) do
            createESP(player)
        end
        
        
        if not ESPObjects.PlayerAddedConnection then
            ESPObjects.PlayerAddedConnection = game.Players.PlayerAdded:Connect(function(player)
                createESP(player)
            end)
        end
        
        
        if not ESPObjects.PlayerRemovingConnection then
            ESPObjects.PlayerRemovingConnection = game.Players.PlayerRemoving:Connect(function(player)
                removeESP(player)
            end)
        end
    else
      
        for player, highlight in pairs(ESPObjects) do
            if typeof(player) ~= "string" then
                removeESP(player)
            end
        end
        
        
        if ESPObjects.PlayerAddedConnection then
            ESPObjects.PlayerAddedConnection:Disconnect()
            ESPObjects.PlayerAddedConnection = nil
        end
        
        if ESPObjects.PlayerRemovingConnection then
            ESPObjects.PlayerRemovingConnection:Disconnect()
            ESPObjects.PlayerRemovingConnection = nil
        end
    end
end

local function createMobileAimbotButton()
    if AimbotButton then return end
    
    -- Create ScreenGui for mobile controls
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "CooHubMobileControls"
    screenGui.ResetOnSpawn = false
    screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    
    -- Make ScreenGui work with TopbarPlus
    screenGui.IgnoreGuiInset = true
    
    -- Create the Aimbot button
    local button = Instance.new("TextButton")
    button.Name = "AimbotButton"
    button.Size = UDim2.new(0, 70, 0, 70)
    button.Position = UDim2.new(0.9, -35, 0.5, -35) -- Right side, middle
    button.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    button.BackgroundTransparency = 0.3
    button.Text = "Aim"
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.TextSize = 16
    button.Font = Enum.Font.GothamBold
    button.BorderSizePixel = 0
    button.AutoButtonColor = false
    
    -- Add rounded corners
    local uiCorner = Instance.new("UICorner")
    uiCorner.CornerRadius = UDim.new(1, 0) -- Makes it circular
    uiCorner.Parent = button
    
    -- Add stroke for better visibility
    local uiStroke = Instance.new("UIStroke")
    uiStroke.Color = Color3.fromRGB(255, 0, 0)
    uiStroke.Thickness = 2
    uiStroke.Parent = button
    
    button.Parent = screenGui
    
    -- Add touch functionality
    button.TouchLongPress:Connect(function()
        -- Show a small menu to change position
        -- For now, just allow dragging
    end)
    
    -- Make button draggable
    local dragging = false
    local dragInput
    local dragStart
    local startPos
    
    local function update(input)
        local delta = input.Position - dragStart
        button.Position = UDim2.new(
            startPos.X.Scale, 
            startPos.X.Offset + delta.X, 
            startPos.Y.Scale, 
            startPos.Y.Offset + delta.Y
        )
    end
    
    button.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.Touch then
            if input.UserInputState == Enum.UserInputState.Begin then
                dragging = true
                dragStart = input.Position
                startPos = button.Position
                
                input.Changed:Connect(function()
                    if input.UserInputState == Enum.UserInputState.End then
                        dragging = false
                    end
                end)
            end
        end
    end)
    
    button.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)
    
    game:GetService("UserInputService").InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            update(input)
        end
    end)
    
    -- Aimbot activation (hold button)
    button.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.Touch then
            AimbotMobileActive = true
            button.BackgroundColor3 = Color3.fromRGB(255, 0, 0) -- Change color when active
        end
    end)
    
    button.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.Touch then
            AimbotMobileActive = false
            button.BackgroundColor3 = Color3.fromRGB(40, 40, 40) -- Restore color when inactive
        end
    end)
    
    screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
    AimbotButton = button
    return button
end

local function removeMobileAimbotButton()
    if AimbotButton and AimbotButton.Parent then
        AimbotButton.Parent:Destroy()
        AimbotButton = nil
    end
end

local function toggleMobileAimbotButton(enabled)
    AimbotButtonEnabled = enabled
    
    if enabled and IsMobile then
        createMobileAimbotButton()
    else
        removeMobileAimbotButton()
    end
end

IsMobile = checkMobile()

local SpeedToggle = MainTab:CreateToggle({
   Name = "เปิดระบบวิ่ง/บิน",
   CurrentValue = false,
   Flag = "SpeedToggle",
   Callback = function(Value)
      SpeedEnabled = Value
      VerticalSpeed = 0
      IsFlying = false
      if not SpeedEnabled then
         if game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("Humanoid") then
            game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16
         end
      end
   end,
})

local ESPToggle = MainTab:CreateToggle({
   Name = "แสดงตำแหน่งผู้เล่น (ESP)",
   CurrentValue = false,
   Flag = "ESPToggle",
   Callback = function(Value)
      toggleESP(Value)
   end,
})

local SpeedSlider = MainTab:CreateSlider({
   Name = "ความเร็วในการวิ่ง",
   Range = {16, 500},
   Increment = 1,
   Suffix = "Speed",
   CurrentValue = 16,
   Flag = "SpeedSlider",
   Callback = function(Value)
      SpeedValue = Value
   end,
})

game:GetService("RunService").Heartbeat:Connect(function()
    if SpeedEnabled then
        updateSpeed()
    end
end)

game:GetService("RunService").RenderStepped:Connect(function()
    if AimbotEnabled then
        local camera = game.Workspace.CurrentCamera
        local viewportSize = camera.ViewportSize
        
        FOVCircle.Position = Vector2.new(viewportSize.X / 2, viewportSize.Y / 2)
        CenterDot.Position = Vector2.new(viewportSize.X / 2, viewportSize.Y / 2)
        
        local target = getClosestPlayerInFOV()
        
        -- Show target information if enabled
        if ShowTargetInfo and target and target.Character and target.Character:FindFirstChild(TargetPart) then
            TargetInfoText.Visible = true
            TargetInfoText.Position = Vector2.new(viewportSize.X / 2, viewportSize.Y / 2 + FOVRadius + 20)
            TargetInfoText.Text = "Target: " .. target.Name .. " | Health: " .. math.floor(target.Character.Humanoid.Health)
        else
            TargetInfoText.Visible = false
        end
        
        -- Check for PC or mobile activation
        local isAimbotActive = (aimbotKeyDown or (IsMobile and AimbotMobileActive))
        
        if isAimbotActive then
            if target and target.Character and target.Character:FindFirstChild(TargetPart) then
                local targetPosition = target.Character[TargetPart].Position
                
                if AimbotSmoothing > 1 then
                    -- Apply smoothing
                    local currentCFrame = camera.CFrame
                    local targetCFrame = CFrame.new(camera.CFrame.Position, targetPosition)
                    
                    -- Apply sensitivity (strength factor)
                    local smoothingFactor = 1 / AimbotSmoothing
                    local sensitivityFactor = smoothingFactor * AimbotSensitivity
                    
                    -- Limit the factor to ensure it's between 0 and 1
                    sensitivityFactor = math.clamp(sensitivityFactor, 0, 1)
                    
                    local smoothedCFrame = currentCFrame:Lerp(targetCFrame, sensitivityFactor)
                    camera.CFrame = smoothedCFrame
                else
                    -- Apply instant aim with sensitivity factor
                    local currentCFrame = camera.CFrame
                    local targetCFrame = CFrame.new(camera.CFrame.Position, targetPosition)
                    
                    -- Even with smoothing off, apply sensitivity
                    local sensitivityFactor = AimbotSensitivity
                    
                    -- Clamp to make sure it's between 0 and 1
                    sensitivityFactor = math.clamp(sensitivityFactor, 0, 1)
                    
                    local adjustedCFrame = currentCFrame:Lerp(targetCFrame, sensitivityFactor)
                    camera.CFrame = adjustedCFrame
                end
            end
        end
    else
        TargetInfoText.Visible = false
    end
end)

game.Players.LocalPlayer.CharacterAdded:Connect(function(char)
    wait(0.5)
    if SpeedEnabled then
        updateSpeed()
    end
end)

-- Move Aimbot controls to the Aimbot tab
local AimbotToggle = AimbotTab:CreateToggle({
   Name = "เปิดระบบเล็งอัตโนมัติ",
   CurrentValue = false,
   Flag = "AimbotToggle",
   Callback = function(Value)
      AimbotEnabled = Value
      FOVCircle.Visible = Value and ShowFOVCircle -- Only show if both aimbot is enabled and circle should be shown
      CenterDot.Visible = Value and ShowCenterDot -- Only show if both aimbot is enabled and dot should be shown
      
      -- Toggle mobile button if on mobile
      if IsMobile then
          toggleMobileAimbotButton(Value)
      end
   end,
})

local FOVSlider = AimbotTab:CreateSlider({
   Name = "ขนาดวงกลม FOV",
   Range = {50, 400},
   Increment = 10,
   Suffix = "px",
   CurrentValue = 100,
   Flag = "FOVSlider",
   Callback = function(Value)
      FOVRadius = Value
      FOVCircle.Radius = Value
   end,
})

-- Add keybind customization UI
local KeybindDisplay = AimbotTab:CreateLabel("ปุ่มที่ใช้งานปัจจุบัน: Shift")

local SetKeybindButton = AimbotTab:CreateButton({
   Name = "กดเพื่อตั้งค่าปุ่ม Aimbot",
   Callback = function()
      KeybindDisplay:Set("กำลังรอกดปุ่ม... (กดปุ่มใดก็ได้ที่ต้องการใช้)")
      isWaitingForKeybindInput = true
      
      local connection
      connection = UserInputService.InputBegan:Connect(function(input, gameProcessed)
         if isWaitingForKeybindInput then
            if input.UserInputType == Enum.UserInputType.Keyboard then
               selectedAimbotKey = input.KeyCode
               aimbotKeyName = tostring(input.KeyCode)
               KeybindDisplay:Set("ปุ่มที่ใช้งานปัจจุบัน: " .. aimbotKeyName)
               aimbotKeyDown = false
               
            elseif input.UserInputType == Enum.UserInputType.MouseButton1 then
               selectedAimbotKey = Enum.UserInputType.MouseButton1
               aimbotKeyName = "LeftClick"
               KeybindDisplay:Set("ปุ่มที่ใช้งานปัจจุบัน: คลิกซ้าย")
               aimbotKeyDown = false
               
            elseif input.UserInputType == Enum.UserInputType.MouseButton2 then
               selectedAimbotKey = Enum.UserInputType.MouseButton2
               aimbotKeyName = "RightClick"
               KeybindDisplay:Set("ปุ่มที่ใช้งานปัจจุบัน: คลิกขวา")
               aimbotKeyDown = false
            end
            
            isWaitingForKeybindInput = false
            connection:Disconnect()
         end
      end)
   end,
})

local ResetKeybindButton = AimbotTab:CreateButton({
   Name = "คืนค่าเริ่มต้น (Shift)",
   Callback = function()
      selectedAimbotKey = Enum.KeyCode.LeftShift
      aimbotKeyName = "LeftShift"
      KeybindDisplay:Set("ปุ่มที่ใช้งานปัจจุบัน: Shift")
      aimbotKeyDown = false
      isWaitingForKeybindInput = false
   end,
})

-- Add new Aimbot customization options
local AimbotSmoothingSlider = AimbotTab:CreateSlider({
   Name = "ความนุ่มนวลในการเล็ง",
   Range = {1, 10},
   Increment = 0.5,
   Suffix = "smooth",
   CurrentValue = 1,
   Flag = "AimbotSmoothingSlider",
   Callback = function(Value)
      AimbotSmoothing = Value
   end,
})

-- Add new sensitivity slider
local AimbotSensitivitySlider = AimbotTab:CreateSlider({
   Name = "ความแรงในการเล็งเป้าหมาย",
   Range = {0.1, 1},
   Increment = 0.05,
   Suffix = "เท่า",
   CurrentValue = 1,
   Flag = "AimbotSensitivitySlider",
   Callback = function(Value)
      AimbotSensitivity = Value
   end,
})

-- Add visibility toggles for FOV circle and center dot
local ShowFOVCircleToggle = AimbotTab:CreateToggle({
   Name = "แสดงวงกลม FOV",
   CurrentValue = true,
   Flag = "ShowFOVCircleToggle",
   Callback = function(Value)
      ShowFOVCircle = Value
      if AimbotEnabled then
         FOVCircle.Visible = Value
      end
   end,
})

local ShowCenterDotToggle = AimbotTab:CreateToggle({
   Name = "แสดงจุดศูนย์กลาง",
   CurrentValue = true,
   Flag = "ShowCenterDotToggle",
   Callback = function(Value)
      ShowCenterDot = Value
      if AimbotEnabled then
         CenterDot.Visible = Value
      end
   end,
})

local TargetInfoToggle = AimbotTab:CreateToggle({
   Name = "แสดงข้อมูลเป้าหมาย",
   CurrentValue = false,
   Flag = "TargetInfoToggle",
   Callback = function(Value)
      ShowTargetInfo = Value
   end,
})

local FOVColorPicker = AimbotTab:CreateColorPicker({
    Name = "สีวงกลม FOV",
    Color = Color3.fromRGB(255, 255, 255),
    Flag = "FOVColorPicker",
    Callback = function(Value)
        FOVCircle.Color = Value
    end
})

-- Add mobile settings section if on mobile device
if IsMobile then
    local MobileSection = AimbotTab:CreateSection("ตั้งค่าสำหรับมือถือ")
    
    local MobileButtonSizeSlider = AimbotTab:CreateSlider({
        Name = "ขนาดปุ่ม Aimbot",
        Range = {40, 120},
        Increment = 5,
        Suffix = "px",
        CurrentValue = 70,
        Flag = "MobileButtonSizeSlider",
        Callback = function(Value)
            if AimbotButton then
                AimbotButton.Size = UDim2.new(0, Value, 0, Value)
            end
        end,
    })
    
    local MobileButtonTransparencySlider = AimbotTab:CreateSlider({
        Name = "ความโปร่งใสของปุ่ม",
        Range = {0, 0.9},
        Increment = 0.05,
        Suffix = "",
        CurrentValue = 0.3,
        Flag = "MobileButtonTransparencySlider",
        Callback = function(Value)
            if AimbotButton then
                AimbotButton.BackgroundTransparency = Value
            end
        end,
    })
    
    local ResetButtonPositionButton = AimbotTab:CreateButton({
        Name = "คืนค่าตำแหน่งปุ่มเริ่มต้น",
        Callback = function()
            if AimbotButton then
                AimbotButton.Position = UDim2.new(0.9, -35, 0.5, -35)
            end
        end,
    })
end
